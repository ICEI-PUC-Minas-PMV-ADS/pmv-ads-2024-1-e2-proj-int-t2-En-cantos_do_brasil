// <auto-generated />
using System;
using Encantos_do_Brasil.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Encantos_do_Brasil.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240609210912_ajuste na coluna de foreignkey de imagens")]
    partial class ajustenacolunadeforeignkeydeimagens
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Encantos_do_Brasil.Models.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Preferencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comentarioss")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCidade")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCidade");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdRegiao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Preferencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdRegiao");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.Favorito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdCidade")
                        .HasColumnType("int");

                    b.Property<int>("IdHotel")
                        .HasColumnType("int");

                    b.Property<int>("IdPontoTuristico")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCidade");

                    b.HasIndex("IdHotel");

                    b.HasIndex("IdPontoTuristico");

                    b.ToTable("Favoritos");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("Custo")
                        .HasColumnType("real");

                    b.Property<int>("IdCidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCidade");

                    b.ToTable("Hoteis");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.ImagemCidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("Dados")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("IdCidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoConteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoImagem")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCidade");

                    b.ToTable("ImagensCidades");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.ImagemEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("Dados")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoConteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoImagem")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.ToTable("ImagensEstados");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.PontoTuristico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("Custo")
                        .HasColumnType("real");

                    b.Property<int>("IdCidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCidade");

                    b.ToTable("PontosTuristicos");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.RegiaoPais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RegioesPais");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.TelefoneHotel", b =>
                {
                    b.Property<int>("IdTelefone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTelefone"), 1L, 1);

                    b.Property<int>("IdHotel")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTelefone");

                    b.HasIndex("IdHotel");

                    b.ToTable("Telefones");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.TextoCidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdCidade")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoTexto")
                        .HasColumnType("int");

                    b.Property<string>("TituloTexto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCidade");

                    b.ToTable("TextosCidades");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.TextoEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoTexto")
                        .HasColumnType("int");

                    b.Property<string>("TituloTexto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.ToTable("TextosEstados");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Preferencia")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.Cidade", b =>
                {
                    b.HasOne("Encantos_do_Brasil.Models.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.Comentario", b =>
                {
                    b.HasOne("Encantos_do_Brasil.Models.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.Estado", b =>
                {
                    b.HasOne("Encantos_do_Brasil.Models.RegiaoPais", "Regiao")
                        .WithMany("Estados")
                        .HasForeignKey("IdRegiao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regiao");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.Favorito", b =>
                {
                    b.HasOne("Encantos_do_Brasil.Models.Cidade", "Cidade")
                        .WithMany("Favoritos")
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Encantos_do_Brasil.Models.Hotel", "Hotel")
                        .WithMany("Favoritos")
                        .HasForeignKey("IdHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Encantos_do_Brasil.Models.PontoTuristico", "PontoTuristico")
                        .WithMany("Favoritos")
                        .HasForeignKey("IdPontoTuristico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("Hotel");

                    b.Navigation("PontoTuristico");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.Hotel", b =>
                {
                    b.HasOne("Encantos_do_Brasil.Models.Cidade", "Cidade")
                        .WithMany("Hoteis")
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.ImagemCidade", b =>
                {
                    b.HasOne("Encantos_do_Brasil.Models.Cidade", "Cidade")
                        .WithMany("ImagensCidades")
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.ImagemEstado", b =>
                {
                    b.HasOne("Encantos_do_Brasil.Models.Estado", "Estado")
                        .WithMany("ImagensEstados")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.PontoTuristico", b =>
                {
                    b.HasOne("Encantos_do_Brasil.Models.Cidade", "Cidade")
                        .WithMany("PontosTuristicos")
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.TelefoneHotel", b =>
                {
                    b.HasOne("Encantos_do_Brasil.Models.Hotel", "Hotel")
                        .WithMany("Telefones")
                        .HasForeignKey("IdHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.TextoCidade", b =>
                {
                    b.HasOne("Encantos_do_Brasil.Models.Cidade", "Cidade")
                        .WithMany("TextosCidades")
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.TextoEstado", b =>
                {
                    b.HasOne("Encantos_do_Brasil.Models.Estado", "Estado")
                        .WithMany("TextosEstados")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.Cidade", b =>
                {
                    b.Navigation("Favoritos");

                    b.Navigation("Hoteis");

                    b.Navigation("ImagensCidades");

                    b.Navigation("PontosTuristicos");

                    b.Navigation("TextosCidades");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.Estado", b =>
                {
                    b.Navigation("Cidades");

                    b.Navigation("ImagensEstados");

                    b.Navigation("TextosEstados");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.Hotel", b =>
                {
                    b.Navigation("Favoritos");

                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.PontoTuristico", b =>
                {
                    b.Navigation("Favoritos");
                });

            modelBuilder.Entity("Encantos_do_Brasil.Models.RegiaoPais", b =>
                {
                    b.Navigation("Estados");
                });
#pragma warning restore 612, 618
        }
    }
}
